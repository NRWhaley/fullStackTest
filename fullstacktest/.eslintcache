[{"/home/nwhaley/Workspace/fullStackTest/fullstacktest/src/index.js":"1","/home/nwhaley/Workspace/fullStackTest/fullstacktest/src/reportWebVitals.js":"2","/home/nwhaley/Workspace/fullStackTest/fullstacktest/src/App.js":"3"},{"size":478,"mtime":1610856045978,"results":"4","hashOfConfig":"5"},{"size":362,"mtime":1610854265796,"results":"6","hashOfConfig":"5"},{"size":3623,"mtime":1610921077476,"results":"7","hashOfConfig":"5"},{"filePath":"8","messages":"9","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"10"},"16vo2ox",{"filePath":"11","messages":"12","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"10"},{"filePath":"13","messages":"14","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"15"},"/home/nwhaley/Workspace/fullStackTest/fullstacktest/src/index.js",[],["16","17"],"/home/nwhaley/Workspace/fullStackTest/fullstacktest/src/reportWebVitals.js",[],"/home/nwhaley/Workspace/fullStackTest/fullstacktest/src/App.js",["18","19"],"import React, { Component } from \"react\";\nimport axios from 'axios';\n\n\nclass App extends Component {\n\nstate = {\n  data : [],\n  id: 0,\n  message: null,\n  intervalIsSet: false,\n  idToDelete: null,\n  idToUpdate: null,\n  objectToUpdate: null,\n\n}\n\ncomponentDidMount() {\n  this.getDataFromDb();\n  if(!this.state.intervalIsSet) {\n    let interval = setInterval(this.getDataFromDb, 1000);\n    this.setState({intervalIsSet: interval})\n  }\n}\n\n\ncomponentWillUnmount() {\n  if(this.state.intervalIsSet) {\n    clearInterval(this.state.intervalIsSet);\n    this.setState({intervalIsSet: null});\n  }\n}\n\n//fetching data\n\ngetDataFromDb = () => {\n  fetch('http://localhost:3001/api/getData')\n    .then((data) => data.json())\n    .then((res) => this.setState({data: res.data}));\n\n}\n\nputDataToDb = (message) => {\n  let currentIds = this.state.data.map((data) => data.id);\n  let idToBeAdded = 0;\n  while(currentIds.includes(idToBeAdded)) {\n    idToBeAdded++;\n  }\n\n  axios.post('http://localhost:3001/api/putData', {\n    id: idToBeAdded,\n    message: message,\n  })\n\n}\n\ndeleteFromDB = (idTodelete) => {\n  parseInt(idTodelete);\n  let objIdToDelete = null;\n  this.state.data.forEach((dat) => {\n    if(dat.id = idTodelete) {\n      objIdToDelete = dat._id;\n    }\n  })\n\n  axios.delete('http://localhost:3001/api/deleteData', {\n    data: {\n      id: objIdToDelete,\n    }\n  })\n};\n\n//fix update here\nupdateDB = (idToUpdate, updateToApply) => {\n  let objIdToUpdate = null;\n  parseInt(idToUpdate);\n  this.state.data.forEach((dat) => {\n    if(dat.id == idToUpdate) {\n      objIdToUpdate = dat._id;\n    }\n  })\n\n  axios.post('http://localhost:3001/api/updateData', {\n    id: objIdToUpdate,\n    update: {message: updateToApply},\n\n  })\n}\n\n\n  render(){\n    const {data} = this.state;\n    return <div>\n      <ul>\n        {data.length <= 0\n        ? 'NO DB ENTRIES YET'\n      : data.map((dat) => (\n        <li style={{padding: '10px'}} key={data.message}>\n          <span style={{color: 'gray'}}>id:</span> {dat.id} <br />\n          <span style= {{color: 'gray'}}>data:</span>\n          {dat.message}\n\n        </li>\n      ))}\n\n      </ul>\n\n      <div style={{ padding: '10px'}}>\n        <input\n          type=\"text\"\n          onChange={(e) => this.setState({message: e.target.value})}\n          placeholder=\"add something in the database\"\n          style={{width: '200px'}}\n          />\n          <button onClick ={() => this.putDataToDb(this.state.message)}>\n            ADD\n          </button>\n      </div>\n      <div style ={{pagging: '10px'}}>\n        <input\n          type=\"text\"\n          style={{width: '200px'}}\n          onChange ={(e) => this.setState({idToDelete: e.target.value})}\n          placeholder=\"put id of item to delete here\"\n          />\n          <button onClick={() => this.deleteFromDB(this.state.idToDelete)}>\n            DELETE\n          </button>\n      </div>\n\n        <div style={{padding: '10px'}}>\n          <input\n            type=\"text\"\n            style={{width: '200px'}}\n            onChange= {(e) => this.setState({ idToUpdate: e.target.value})}\n            placeholder=\"id of item to update here\"\n            />\n            <input\n              type=\"text\"\n              style={{width: '200px'}}\n              onChange={(e) => this.setState({ updateToApply: e.target.value})}\n              placeholder = \"put new value of the item here\"\n              />\n              <button\n                onClick={() =>\n                 this.updateDB(this.state.idToUpdate, this.state.updateToApply)\n                }\n                >\n                  UPDATE\n                </button>\n        </div>\n\n    </div>;\n  }\n}\n\nexport default App;",{"ruleId":"20","replacedBy":"21"},{"ruleId":"22","replacedBy":"23"},{"ruleId":"24","severity":1,"message":"25","line":61,"column":8,"nodeType":"26","messageId":"27","endLine":61,"endColumn":27},{"ruleId":"28","severity":1,"message":"29","line":78,"column":15,"nodeType":"30","messageId":"31","endLine":78,"endColumn":17},"no-native-reassign",["32"],"no-negated-in-lhs",["33"],"no-cond-assign","Expected a conditional expression and instead saw an assignment.","AssignmentExpression","missing","eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","no-global-assign","no-unsafe-negation"]